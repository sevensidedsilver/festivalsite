{"version":3,"sources":["app.js","controllers/adminController.js","controllers/controller.js","controllers/forumController.js","controllers/newThread.js","controllers/threadController.js","directives/comments.js","services/adminService.js","services/authService.js","services/postService.js","services/recursion.js","services/recursionHelper.js","services/service.js","services/threadService.js","controllers/static/principles.js","services/static/principlesService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","service","title","resolve","user","authService","$q","$state","$http","$window","defer","method","then","response","data","location","reject","getCurrentUser","window","catch","alert","go","otherwise","adminService","threadService","$scope","$stateParams","homeSrv","getReportedComments","resp","comments","getReportedThreads","threads","deleteComment","comment_id","dismissComment","deleteThread","thread_id","dismissThread","display_name","admin","menuclass","togglemenu","hideMenu","getThreads","openThreads","forEach","el","timeAgo","moment","created_at","fromNow","postService","postNewThread","thread_author","thread_title","postTitle","thread_content","postText","length","postThread","user_id","getcomments","thread","getTopLevelComments","findThread","isItStarred","starred","starThis","unStarThis","console","log","addComment","parent_comment","author_display","comment_content","createComment","reportThread","reportComment","reportcomment","togglecomment","replyComment","comment","showCommentReplyTextBox","addChildComment","child_comment_content","replyCommentCancel","directive","$compile","restrict","link","scope","element","attrs","children","cloned","append","get","test","res","error","factory","compile","isFunction","post","contents","remove","compiledContents","pre","clone","apply","arguments","id","timeFrom","time","startOf","unReadThread","principlesService","principles","random","Math","text"],"mappings":"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","file":"all.js","sourcesContent":["angular.module('app', ['ui.router'])\n\n\n\n\n\n\n    .config(function($stateProvider, $urlRouterProvider){\n      //$urlRouterProvider.when(\"login\", window.location = \"http://localhost:3000/auth\")\n\n      $stateProvider\n        .state('home', {\n            url: '/',\n            templateUrl: \"./app/views/home/home.html\"\n\n        })\n        .state('prepare', {\n          url: '/prepare',\n          templateUrl: \"./app/views/prepare.html\"\n        })\n\n        .state('principles', {\n          url: '/principles',\n          templateUrl: \"./app/views/principles.html\",\n          controller: \"principles\",\n          service: \"principles\"\n        })\n\n        .state('fire', {\n          url: '/fire',\n          templateUrl: \"./app/views/fire.html\"\n        })\n\n\n// login state\n        .state('login', {\n            url: '/auth'\n\n        })\n\n// the forum\n        .state('forum', {\n            url: '/forum',\n            templateUrl: \"./app/views/forum/forum.html\",\n            title: 'Rha - Phorum',\n            controller: 'forumCtrl',\n            resolve:{\n              user: function (authService, $q, $state, $http, $window) {\n                var defer = $q.defer()\n               $http({\n                  method: \"GET\",\n                  url: '/auth/me'\n                }).then((response) => {\n\n                      if(!response.data.user) {\n                          $window.location = \"http://localhost:3000/auth\"\n                          defer.reject()\n                      } else {defer.resolve(response.data)}\n                  })\n              }\n            }\n        } )\n\n        .state('addpost', {\n            url: '/addpost',\n            controller: 'newPostCtrl',\n            templateUrl: \"./app/views/forum/addpost.html\",\n            resolve: {\n              user: (authService, $state) => {\n                  return authService.getCurrentUser().then((response) => {\n                      if(!response.data) {\n                          window.location = \"http://localhost:3000/auth\"\n                      } return response.data\n                  }).catch(err => {\n                      window.location = \"http://localhost:3000/auth\"\n                  })\n              }\n            }\n        } )\n        // up in a thread\n        .state('thread', {\n              url: '/thread/:thread_id',\n              templateUrl: \"./app/views/forum/thread.html\",\n\n              //needs controller\n              controller: \"thread\",\n              resolve: {\n                user: (authService, $state) => {\n                    return authService.getCurrentUser().then((response) => {\n                        if(!response.data) {\n                            window.location = \"http://localhost:3000/auth\"\n                        } return response.data\n                    }).catch(err => {\n                        window.location = \"http://localhost:3000/auth\"\n                    })\n                }\n              }\n          })\n\n// example from dallin\n          .state('admin', {\n             templateUrl: './app/views/forum/admin.html',\n             url: '/admin',\n               controller: 'adminController',\n               resolve: {\n                 user: (authService, $state) => {\n                     return authService.getCurrentUser().then((response) => {\n                       //console.log(response.data.user[2])\n                        if (response.data.user[2] === 0) {\n                          window.alert(\"You are not an admin.\")\n                          $state.go('forum')\n                        }\n\n                         if(!response.data) {\n                             window.location = \"http://localhost:3000/auth\"\n                         } return response.data\n                     }).catch(err => {\n                         window.location = \"http://localhost:3000/auth\"\n                     })\n                 }\n               }\n           })\n\n\n        $urlRouterProvider\n            .otherwise('/')\n    })\n","angular.module('app').controller('adminController', function(adminService, $state, threadService, authService, $scope, $http, $window, $stateParams, homeSrv){\n\n\n// get all reported comments\n$scope.getReportedComments = function(){\n  adminService.getReportedComments().then(function(resp){\n    $scope.comments = resp.data\n  })\n}\n$scope.getReportedComments();\n\n\n// get all reported threads\n$scope.getReportedThreads = function(){\n  adminService.getReportedThreads().then(function(resp){\n    $scope.threads = resp.data\n  })\n}\n$scope.getReportedThreads();\n\n// deletes a comment\n$scope.deleteComment = function(comment_id){\n\n  adminService.deleteComment(comment_id).then(function(resp){\n    return resp\n  })\n}\n\n// dismiss comment reported\n$scope.dismissComment = function(comment_id){\n\n  adminService.dismissComment(comment_id).then(function(resp){\n    return resp\n  })\n}\n\n// deletes a thread\n$scope.deleteThread = function(thread_id){\n  adminService.deleteThread(thread_id).then(function(resp){\n    return resp\n  })\n}\n\n//dismiss thread report\n$scope.dismissThread = function(thread_id){\n  adminService.dismissThread(thread_id).then(function(resp){\n    return resp\n  })\n}\n\n\n\n  //this gets the session and pulls the displayName from it\n  $http({\n     method: \"GET\",\n     url: '/auth/me'\n   }).then((response) => {\n\n         if(!response.data.user) {\n             $window.location = \"http://localhost:3000/auth\"\n             defer.reject()\n         } else {\n\n           $scope.display_name = response.data.user[1]\n           $scope.admin = {\n             display_name : $scope.display_name\n\n           }\n\n         }\n     })\n\n\n\n\n\n})\n","angular.module('app').controller('homeCtrl', function($scope, $stateParams, homeSrv){\n\n\n// show the menu on click\n  $scope.menuclass = \"mobile-menu\"\n  $scope.togglemenu = function(){\n    if ($scope.menuclass === \"mobile-menu\"){\n      $scope.menuclass = \"mobile-menu show-mobile-menu\"\n    } else if ($scope.menuclass === \"mobile-menu show-mobile-menu\"){\n      $scope.menuclass = \"mobile-menu\"\n    }\n  }\n\n\n\n\n\n  $scope.hideMenu = function (){\n    $scope.menuclass = \"mobile-menu\"\n  }\n\n  $scope.getThreads = function(){\n\n    homeSrv.openThreads().then(function(resp){\n      // console.log(resp.data)\n      $scope.threads = resp.data\n\n    })\n\n}\n\n  $scope.getThreads()\n\n// assign threads to the scope\n\n\n\n\n})\n","angular.module('app').controller('forumCtrl', function(authService, $scope, $stateParams, homeSrv){\n\n\n\n\n    $scope.getThreads = function(){\n\n      homeSrv.openThreads().then(function(resp){\n        //console.log(resp)\n\n        resp.data.forEach(function(el){\n\n          el.timeAgo = (moment(el.created_at, \"YYYYMMDD, h:mm:ss\").fromNow())\n        })\n        $scope.threads = resp.data\n      })\n\n  }\n\n    $scope.getThreads()\n\n\n\n\n})\n","angular.module('app').controller('newPostCtrl', function(postService, $state, threadService, authService, $scope, $http, $window, $stateParams, homeSrv){\n\n\n  //create post on button click and push to database\n\n  $scope.postNewThread = function(){\n    // threadService.unReadThread()\n    var data = {\n      thread_author: $scope.display_name,\n      thread_title: $scope.postTitle,\n      thread_content: $scope.postText,\n    }\n    if (data.thread_title.length >= 5) {\n      threadService.postThread(data).then(function(resp){\n        // whatever you want to do after the posting goes here!\n        $scope.postTitle = \"\";\n        $scope.postText = \"\";\n        $state.go('forum')\n      })\n    } else {\n      alert(\"Post titles must contain at least 5 characters!\")\n    }\n\n\n\n}\n\n\n  //this gets the session and pulls the displayName from it\n  $http({\n     method: \"GET\",\n     url: '/auth/me'\n   }).then((response) => {\n\n         if(response.data.user === false) {\n             $window.location = \"http://localhost:3000/auth\"\n             defer.reject()\n         } else {\n        //  console.log(response.data.user)\n          $scope.display_name = response.data.user[1]\n\n          //  console.log(response.data.user[0].username)\n\n\n         }\n     })\n\n\n\n\n\n})\n","angular.module('app').controller('thread', function($scope, $state, threadService, $http, $window, $stateParams, homeSrv){\n\n  // get the display_name from the session object\n  $http({\n     method: \"GET\",\n     url: '/auth/me'\n   }).then((response) => {\n\n         if(!response.data.user) {\n             $window.location = \"http://localhost:3000/auth\"\n             defer.reject()\n         } else {\n           //console.log(response.data.user)\n           $scope.display_name = response.data.user[1];\n           $scope.user_id = response.data.user[0]\n\n         }\n     })\n\n  // display all the top level comments for a thread\n    $scope.getcomments = function(){\n    //  console.log($scope.thread.thread_id)\n      let data = $scope.thread.thread_id\n\n      threadService.getTopLevelComments(data).then(function(resp){\n\n        $scope.comments = resp.data\n        //console.log(resp.data)\n\n\n      })\n\n  }\n\n\n  // //fetches the thread data from service and assigns it to thread\n  homeSrv.findThread($stateParams.thread_id).then(function(resp){\n    //console.log(resp)\n    $scope.thread = resp.data[0]\n\n    $scope.thread.timeAgo = (moment($scope.thread.created_at, \"YYYYMMDD, h:mm:ss\").fromNow())\n    $scope.getcomments()\n\n\n    $scope.isItStarred($scope.user_id, $scope.thread.thread_id)\n\n  })\n  // console.log($stateParams.thread_id)\n\n\n\n\n\n// thread is starred or NOT star\n$scope.isItStarred = function(user_id, thread_id){\n   threadService.isItStarred(user_id, thread_id).then(function(resp){\n    $scope.starred = resp\n  })\n}\n\n// toggle star on\n$scope.starThis = function(user_id, thread_id){\n  // console.log(\"controller sending\" , user_id, thread_id)\n\n  threadService.starThis(user_id, thread_id).then(function(resp){\n    $scope.starred = resp\n  })\n}\n\n// toggle star off\n$scope.unStarThis = function(user_id, thread_id){\n  // console.log(\"controller sending\", user_id, thread_id)\n\n  threadService.unStarThis(user_id, thread_id).then(function(resp){\n    console.log(resp)\n    $scope.starred = resp\n  })\n}\n\n\n\n\n\n\n\n\n\n\n// '/'/'/'/'/'/'/'/'/'/'/'/\n// submit a new top level comment to a thread\n  $scope.addComment = function(){\n    //console.log(\"fire\")\n    var data = {\n      thread_id: $scope.thread.thread_id,\n      parent_comment: 0,\n      author_display: $scope.display_name,\n      comment_content: $scope.comment_content\n    }\n    if (data.comment_content.length >= 5) {\n      threadService.createComment(data).then(function(resp){\n        // after clicking the button, do this!\n        $scope.comment_content = \"\";\n        //$scope.comments.push(data)\n        $scope.getcomments()\n      })\n    } else {alert(\"comments must have at least 5 characters!\")}\n\n  }\n\n// report thread =====================================\n\n$scope.reportThread = function(thread_id){\n    threadService.reportThread(thread_id).then(function(resp){\n      alert(\"Thanks, an admin will review your report soon\")\n    })\n}\n\n// report a comment ===============================\n  $scope.reportComment = function(data){\n    threadService.reportcomment(data).then(function(resp){\n      alert(\"Thanks, an admin will review your report soon\");\n    })\n  }\n\n// hide a comment thread =========================================== HIDE\n  $scope.togglecomment = function(comment_id) {\n\n  }\n\n\n\n\n// post a reply comment\n//show the reply action area\n  $scope.replyComment = function(comment){\n        comment.showCommentReplyTextBox = true;\n  }\n\n// post the reply\n  $scope.addChildComment = function(comment){\n    let data = {\n      thread_id: $scope.thread.thread_id,\n      parent_comment: comment.comment_id,\n      author_display: $scope.display_name,\n      comment_content: comment.child_comment_content\n    }\n    if (data.comment_content.length >= 3){\n      threadService.createComment(data).then(function(resp){\n        // after clicking the button, do this!\n        comment.child_comment_content = \"\";\n        $scope.getcomments()\n      })\n\n    } else (alert(\"replies to comments need at least 3 characters!\"))\n\n\n  }\n\n//cancel the reply\n  $scope.replyCommentCancel = function(comment){\n    comment.showCommentReplyTextBox = false;\n  }\n\n\n// END OF MODULE ///////////////////////////////////////////////////////////////\n})\n","angular.module('app')\n.directive('comments', function ($compile) {\n  return {\n      restrict: \"E\",\n      // scope: {\n      //   comment: \"=\"\n      // },\n      templateUrl: \"../app/directives/threadTemplate.html\",\n      link: function (scope, element, attrs) {\n        //check if this member has children\n        if (scope.comment.children.length > 0) {\n            // append the collection directive to this element\n            $compile('<comments comment=\"comment\" ng-repeat=\"comment in comment.children\"></comments>')(scope, function(cloned, scope){\n              element.append(cloned);\n              });\n        }\n      }\n\n\n\n      // compile: function(element) {\n      //     // Use the compile function from the RecursionHelper,\n      //     // And return the linking function(s) which it returns\n      //     return recursionHelper.compile(element);\n      // }\n  };\n});\n\n\n\n\n\n\n\n\n\n// templateUrl: \"../app/directives/threadTemplate.html\"\n","angular.module('app').service('adminService', function($http){\n\n  this.getReportedComments = function(){\n    return $http ({\n      method: \"GET\",\n      url: \"/reportedcomments\"\n    }).then(function(resp){\n      return resp\n    })\n\n  }\n\n  this.getReportedThreads = function(){\n    return $http ({\n      method: \"GET\",\n      url: \"/reportedthreads\"\n\n\n    }).then(function(resp){\n      return resp\n    })\n  }\n// delete comment\n  this.deleteComment = function(comment_id){\n    //console.log(comment_id)\n    return $http ({\n      method: \"DELETE\",\n      url: \"/delete/comments/comment_id/\" + comment_id\n      //data must be an object!\n\n    }).then(function(resp){\n      //console.log(data)\n      return resp\n    })\n  }\n// delete thread\nthis.deleteThread = function(thread_id){\n\n  return $http ({\n    method: \"DELETE\",\n    url: \"/delete/threads/thread_id/\" + thread_id\n    //data must be an object!\n\n  }).then(function(resp){\n    //console.log(data)\n    return resp\n  })\n}\n// dismiss comment\n  this.dismissComment = function(comment_id){\n\n    return $http({\n      method: \"PUT\",\n      url: \"/dismisscomment/\" + comment_id,\n\n\n    }).then(function(resp){\n      return resp\n    })\n  }\n  // dismiss thread\n    this.dismissThread = function(thread_id){\n\n      return $http({\n        method: \"PUT\",\n        url: \"/dismissthread/\" + thread_id,\n\n\n      }).then(function(resp){\n        return resp\n      })\n    }\n})\n","angular.module('app').service('authService', function($http){\n\n  // returns the current user object from auth0\n  this.getCurrentUser = function () {\n    //console.log(\"test\")\n    return $http.get('/auth/me').then(function(response){\n      //console.log(response)\n      return response\n\n    })\n\n  }\n\n\n  this.test = function(){\n\n    return $http({\n      method: \"GET\",\n      url: \"/auth/me\"\n    }).then(function(res){\n      //console.log(res)\n    }).catch(function(error){\n      //console.log(error)\n    })\n\n  }\n\n})\n","angular.module('app').service('postService', function($http){\n\n  // returns the current user object from auth0\n  this.getCurrentUser = function () {\n    //console.log(\"test\")\n    return $http.get('/auth/me').then(function(response){\n      //console.log(response)\n      return response\n\n    })\n\n  }\n\n\n  this.test = function(){\n\n    return $http({\n      method: \"GET\",\n      url: \"/auth/me\"\n    }).then(function(res){\n      //console.log(res)\n    }).catch(function(error){\n      //console.log(error)\n    })\n\n  }\n\n})\n","angular.module('app').service('recursion', function($http){\n\n\n\n\n\n\n\n\n\n\n\n\n})\n","angular.module('app').factory('recursionHelper', ['$compile', function($compile){\n  // return {\n  //     childAction: function(){\n  //\n  //\n  //\n  //\n  //     }\n\n      // /**\n      //  * Manually compiles the element, fixing the recursion loop.\n      //  * @param element\n      //  * @param [link] A post-link function, or an object with function(s) registered via pre and post properties.\n      //  * @returns An object containing the linking functions.\n      //  */\n      return {compile: function(element, link){\n          // Normalize the link parameter\n          if(angular.isFunction(link)){\n              link = { post: link };\n          }\n\n          // Break the recursion loop by removing the contents\n          var contents = element.contents().remove();\n          var compiledContents;\n          return {\n              pre: (link && link.pre) ? link.pre : null,\n              /**\n               * Compiles and re-adds the contents\n               */\n              post: function(scope, element){\n                  // Compile the contents\n                  if(!compiledContents){\n                      compiledContents = $compile(contents);\n                  }\n                  // Re-add the compiled contents to the element\n                  compiledContents(scope, function(clone){\n                      element.append(clone);\n                  });\n\n                  // Call the post-linking function, if any\n                  if(link && link.post){\n                      link.post.apply(null, arguments);\n                  }\n              }\n          };\n      }\n  };\n}]);\n","angular.module('app').service('homeSrv', function($http){\n\n  this.openThreads = function(){\n    return $http({\n      url: '/threads',\n      method: 'GET',\n    }).then(function(resp){\n      return resp;\n    })\n  }\n\n\n  this.findThread = function(id){\n    return $http({\n      url: '/thread/' + id,\n      method: 'GET',\n    }).then(function(resp){\n      return resp;\n    })\n  }\n\n// moment JS to get the \"X hours ago\" for comments and threads\n\n  this.timeFrom = function(time) {\n    return(moment(time, \"YYYYMMDD, h:mm:ss\" ).startOf('seconds').fromNow())\n  }\n\n\n\n\n})\n","angular.module('app').service('threadService', function($http){\n\n\n\n// post http posts to database\nthis.postThread = function(data){\n  return $http({\n    method: \"POST\",\n    url: \"/newthread\",\n    data: data\n  })\n},\n// mark new thread as unread for all users\nthis.unReadThread = function(data){\n  return $http({\n    method: \"get\",\n    url: \"/unreadthread\",\n    data: data\n  })\n},\n\n\n// get top level comments for a threadService\nthis.getTopLevelComments = function(data){\n  return $http({\n    method:\"GET\",\n    url:\"/getallcomments/\" + data\n\n  }).then(function(resp){\n    //console.log(resp)\n    return resp\n  })\n},\n\n/// is it starred?\n// check using the user id and the thread id passed from the controller\nthis.isItStarred = function(user_id, thread_id){\n  // console.log(\"we have the \", user_id, thread_id)\n  return $http({\n    method: \"GET\",\n    url: \"/isitstarred/\" + user_id + \"/\" + thread_id\n  }).then(function(resp){\n    // console.log(resp.data)\n    return (resp.data)\n  })\n\n},\n// toggle star on\nthis.starThis = function(user_id, thread_id){\n  //console.log(\"we got here\")\n  return $http({\n    method: \"put\",\n    url: \"/starthis/\" + user_id + \"/\" + thread_id\n  }).then(function(resp){\n    return resp.data\n\n  })\n\n},\n//toggle star off\nthis.unStarThis = function(user_id, thread_id){\n  return $http({\n    method: \"put\",\n    url: \"/unstarthis/\" + user_id + \"/\" + thread_id\n  }).then(function(resp){\n    // console.log(resp.data)\n    return resp.data\n  })\n\n\n\n}\n\n\n// post comment\nthis.createComment = function(data){\n  return $http({\n    method: \"POST\",\n    url: \"/newcomment\",\n    data: data\n  })\n\n\n},\n\n// report a comment\nthis.reportcomment = function(data){\n  // console.log(data)\n  return $http({\n    method: \"PUT\",\n    url: \"/reportcomment/\" + data\n  })\n},\n\nthis.reportThread = function(data){\n  return $http({\n    method: \"PUT\",\n    url: \"/reportthread/\" + data\n  })\n}\n\n})\n","angular.module('app').controller('principles', function(adminService, $state, threadService, authService, $scope, $http, $window, $stateParams, principlesService){\n\n  $scope.principles = principlesService.principles\n\n  $scope.random = function() {\n    return 0.5 - Math.random();\n}\n\n})\n","angular.module('app').service('principlesService', function($http){\n\n\n\n\nthis.principles = [\n  {\n    title: \"Radical Self Reliance\",\n    text: \"This event encourages you to discover and rely upon yourself. There's no food trucks or trash cans at the event!\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Radical Inclusion\",\n    text: \"Anyone may be apart of Rhapsody. There are no prerequisites for participation - we welcome the stranger.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Gifting\",\n    text: \"We devote ourselves to act of giving. Gifts are unconditional. Gifts do not exchange or contemplate returns!\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Decommodification\",\n    text: \"We discourage mediation of our environment by sponsorship, transactions, or advertising. Resist subsituting consumption for participation.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Radical Self Expression\",\n    text: \"This arises from the individual. Your expression is offered as a gift to others - respecting the rights/liberties of the recipient.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Communal Effort\",\n    text: \"We value collaboration! Everyone strives to create public and shared works of expression and communication.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Civic Responsibility\",\n    text: \"We value civility. Assume responsibility for anyone participating in something you've organized and act in accordance with the law.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Leave No Trace\",\n    text: \"Respect the environment. Clean up after yourselves and whenever possible, leave places in a better state than you found it in.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Radical Participation\",\n    text: \"Transformative change only comes through sincere personal participation. We believe in achieving through doing. Everone is invited to work and play.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Immediacy\",\n    text: \"There's no moment like the present. Overcome the barriers that stand between you, me, and our good times together! Recognize your inner self by acting purely in the moment.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  }\n]\n\n\n\n\n\n\n\n\n\n\n\n})\n"]}