{"version":3,"sources":["app.js","controllers/adminController.js","controllers/controller.js","controllers/event.js","controllers/events.js","controllers/forumController.js","controllers/newThread.js","controllers/threadController.js","directives/comments.js","services/adminService.js","services/authService.js","services/events.js","services/postService.js","services/recursion.js","services/recursionHelper.js","services/service.js","services/threadService.js","controllers/static/principles.js","services/static/principlesService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","resolve","user","authService","$state","getCurrentUser","then","response","console","log","data","undefined","window","alert","go","location","catch","service","title","$q","$http","$window","defer","method","reject","otherwise","adminService","threadService","$scope","$stateParams","homeSrv","getReportedComments","resp","comments","getReportedThreads","threads","deleteComment","comment_id","dismissComment","deleteThread","thread_id","dismissThread","display_name","admin","menuclass","togglemenu","hideMenu","getThreads","openThreads","eventsService","getEvent","id","event","isAdmin","createEvent","displayDate","date","toString","substring","startTime","endTime","goal","image","fbEvent","desc1","line1","desc2","line2","desc3","line3","desc4","line4","desc5","line5","getAllEvents","events","length","noEvents","eventHappened","current_user","user_id","moderate","updated_threads","display_updates","thread_updates","loop_these","dupes_removed","i","indexOf","push","forEach","el","findThread","getReported","needMod","modNumber","timeAgo","moment","created_at","fromNow","postService","postNewThread","thread_author","thread_title","postTitle","thread_content","postText","postThread","removeFromTop","remove_top","getcomments","thread","getTopLevelComments","isItStarred","starred","starThis","unStarThis","addComment","parent_comment","author_display","comment_content","author_id","createComment","feed_top","reportThread","reportComment","reportcomment","onHide","togglecomment","$event","comment","element","target","parent","hasClass","removeClass","hideShow","addClass","val","replyComment","showCommentReplyTextBox","addChildComment","child_comment_content","replyCommentCancel","directive","$compile","restrict","link","scope","attrs","children","cloned","append","get","test","res","error","factory","compile","isFunction","post","contents","remove","compiledContents","pre","clone","apply","arguments","timeFrom","time","startOf","unReadThread","mod","principlesService","principles","random","Math","text"],"mappings":"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","file":"all.js","sourcesContent":["angular.module('app', ['ui.router'])\n\n\n\n\n\n\n    .config(function($stateProvider, $urlRouterProvider){\n\n      $stateProvider\n        .state('home', {\n            url: '/',\n            templateUrl: \"./app/views/home/home.html\"\n\n        })\n        .state('prepare', {\n          url: '/prepare',\n          templateUrl: \"./app/views/prepare.html\"\n        })\n\n        .state('events', {\n          url: '/events',\n          templateUrl: \"./app/views/events/events.html\",\n          controller: \"events\",\n\n        })\n        .state('event', {\n          url: '/event/:id',\n          templateUrl: \"./app/views/events/event.html\",\n          controller: \"event\",\n        })\n        .state('create-event', {\n          url: '/create-event',\n          controller: \"events\",\n          templateUrl: \"./app/views/events/create-event.html\",\n          resolve: {\n            user: (authService, $state) => {\n                return authService.getCurrentUser().then((response) => {\n                  console.log(response.data.user[2])\n                   if (response.data.user[2] === 0 || response.data.user[2] === undefined) {\n                     window.alert(\"Only admins can create events.\")\n                     $state.go('forum')\n                   }\n\n                    if(!response.data) {\n                        window.location = \"http://www.rhapsodyfestival.com/auth\"\n                    } return response.data\n                }).catch(err => {\n                    window.location = \"http://www.rhapsodyfestival.com/auth\"\n                })\n            }\n          }\n        })\n\n\n        .state('principles', {\n          url: '/principles',\n          templateUrl: \"./app/views/principles.html\",\n          controller: \"principles\",\n          service: \"principles\"\n        })\n\n        .state('fire', {\n          url: '/fire',\n          templateUrl: \"./app/views/fire.html\"\n        })\n\n\n// login state\n        .state('login', {\n            url: '/auth'\n\n        })\n\n// the forum\n        .state('forum', {\n            url: '/forum',\n            templateUrl: \"./app/views/forum/forum.html\",\n            title: 'Rha - Phorum',\n            controller: 'forumCtrl',\n            resolve:{\n              user: function (authService, $q, $state, $http, $window) {\n                var defer = $q.defer()\n               $http({\n                  method: \"GET\",\n                  url: '/auth/me'\n                }).then((response) => {\n\n                      if(!response.data.user) {\n                          $window.location = \"http://www.rhapsodyfestival.com/auth\"\n                          defer.reject()\n                      } else {defer.resolve(response.data)}\n                  })\n              }\n            }\n        } )\n\n        .state('addpost', {\n            url: '/addpost',\n            controller: 'newPostCtrl',\n            templateUrl: \"./app/views/forum/addpost.html\",\n            resolve: {\n              user: (authService, $state) => {\n                  return authService.getCurrentUser().then((response) => {\n                      if(!response.data) {\n                          window.location = \"http://www.rhapsodyfestival.com/auth\"\n                      } return response.data\n                  }).catch(err => {\n                      window.location = \"http://www.rhapsodyfestival.com/auth\"\n                  })\n              }\n            }\n        } )\n        // up in a thread\n        .state('thread', {\n              url: '/thread/:thread_id',\n              templateUrl: \"./app/views/forum/thread.html\",\n\n              //needs controller\n              controller: \"thread\",\n              resolve: {\n                user: (authService, $state) => {\n                    return authService.getCurrentUser().then((response) => {\n                        if(!response.data) {\n                            window.location = \"http://www.rhapsodyfestival.com/auth\"\n                        } return response.data\n                    }).catch(err => {\n                        window.location = \"http://www.rhapsodyfestival.com/auth\"\n                    })\n                }\n              }\n          })\n\n// example from dallin\n          .state('admin', {\n             templateUrl: './app/views/forum/admin.html',\n             url: '/admin',\n               controller: 'adminController',\n               resolve: {\n                 user: (authService, $state) => {\n                     return authService.getCurrentUser().then((response) => {\n                       //console.log(response.data.user[2])\n                        if (response.data.user[2] === 0) {\n                          window.alert(\"You are not an admin.\")\n                          $state.go('forum')\n                        }\n\n                         if(!response.data) {\n                             window.location = \"http://www.rhapsodyfestival.com/auth\"\n                         } return response.data\n                     }).catch(err => {\n                         window.location = \"http://www.rhapsodyfestival.com/auth\"\n                     })\n                 }\n               }\n           })\n\n\n        $urlRouterProvider\n            .otherwise('/')\n    })\n","angular.module('app').controller('adminController', function(adminService, $state, threadService, authService, $scope, $http, $window, $stateParams, homeSrv){\n\n\n// get all reported comments\n$scope.getReportedComments = function(){\n  adminService.getReportedComments().then(function(resp){\n    $scope.comments = resp.data\n  })\n}\n$scope.getReportedComments();\n\n\n// get all reported threads\n$scope.getReportedThreads = function(){\n  adminService.getReportedThreads().then(function(resp){\n    $scope.threads = resp.data\n  })\n}\n$scope.getReportedThreads();\n\n// deletes a comment\n$scope.deleteComment = function(comment_id){\n\n  adminService.deleteComment(comment_id).then(function(resp){\n    return resp\n  })\n  $scope.getReportedComments();\n}\n\n// dismiss comment reported\n$scope.dismissComment = function(comment_id){\n\n  adminService.dismissComment(comment_id).then(function(resp){\n    return resp\n  })\n  $scope.getReportedComments();\n}\n\n// deletes a thread\n$scope.deleteThread = function(thread_id){\n  adminService.deleteThread(thread_id).then(function(resp){\n    return resp\n  })\n  $scope.getReportedThreads();\n}\n\n//dismiss thread report\n$scope.dismissThread = function(thread_id){\n  adminService.dismissThread(thread_id).then(function(resp){\n    return resp\n  })\n  $scope.getReportedThreads();\n}\n\n\n\n  //this gets the session and pulls the displayName from it\n  $http({\n     method: \"GET\",\n     url: '/auth/me'\n   }).then((response) => {\n\n         if(!response.data.user) {\n             $window.location = \"http://www.rhapsodyfestival.com/auth\"\n             defer.reject()\n         } else {\n\n           $scope.display_name = response.data.user[1]\n           $scope.admin = {\n             display_name : $scope.display_name\n\n           }\n\n         }\n     })\n\n\n\n\n\n})\n","angular.module('app').controller('homeCtrl', function($scope, $stateParams, homeSrv){\n\n\n// show the menu on click\n  $scope.menuclass = \"mobile-menu\"\n  $scope.togglemenu = function(){\n    if ($scope.menuclass === \"mobile-menu\"){\n      $scope.menuclass = \"mobile-menu show-mobile-menu\"\n    } else if ($scope.menuclass === \"mobile-menu show-mobile-menu\"){\n      $scope.menuclass = \"mobile-menu\"\n    }\n  }\n\n\n\n\n\n  $scope.hideMenu = function (){\n    $scope.menuclass = \"mobile-menu\"\n  }\n\n  $scope.getThreads = function(){\n\n    homeSrv.openThreads().then(function(resp){\n      // console.log(resp.data)\n      $scope.threads = resp.data\n\n    })\n\n}\n\n  $scope.getThreads()\n\n// assign threads to the scope\n\n\n\n\n})\n","angular.module('app').controller('event', function($scope, $stateParams, eventsService){\n// get the event to display\neventsService.getEvent($stateParams.id).then(resp => {\n\n  console.log(resp.data[0])\n\n  $scope.event = resp.data[0]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n})\n","angular.module('app').controller('events', function($scope, $state, threadService, $http, $window, $stateParams, eventsService){\n// only admins can create events, check if user is admin and display the \"New event\" button if so\n$scope.isAdmin = false\n$http({\n   method: \"GET\",\n   url: '/auth/me'\n }).then((response) => {\n      if (response.data.user[2] === 1) {\n        $scope.isAdmin = true\n      }\n   })\n\n\n\n\n\n\n// create new event\n  $scope.createEvent = () => {\n    let displayDate = $scope.date.toString()\n    displayDate = displayDate.substring(0, 15)\n\n    let event = {\n      title: $scope.title,\n      location: $scope.location,\n\n      displayDate: displayDate,\n      date: $scope.date,\n\n\n      startTime: $scope.startTime,\n      endTime: $scope.endTime,\n      goal: $scope.goal,\n      image: $scope.image,\n      fbEvent: $scope.fbEvent,\n      desc1: $scope.line1,\n      desc2: $scope.line2,\n      desc3: $scope.line3,\n      desc4: $scope.line4,\n      desc5: $scope.line5\n    }\n    console.log(event.date)\n    eventsService.createEvent(event)\n    $state.go('events')\n  }\n\n\n// get all events for upcoming eventsng repeat\n  $scope.getAllEvents = () => {\n    eventsService.getAllEvents().then(resp => {\n\n\n      $scope.events = resp.data\n\n      if ($scope.events.length < 1) {\n        $scope.noEvents = true\n        console.log(\"no events\")\n      }\n\n    })\n  }\n\n  $scope.getAllEvents()\n\n\n\n\n// mark an event as past\n$scope.eventHappened = (id) =>{\n  eventsService.eventHappened(id)\n\n  $scope.getAllEvents()\n}\n\n\n\n\n\n\n\n\n// end of controller ===============================\n})\n","angular.module('app').controller('forumCtrl', function($http, $window, adminService, authService, $scope, $stateParams, homeSrv){\n\n// get current user\nlet current_user\n$http({\n   method: \"GET\",\n   url: '/auth/me'\n }).then((response) => {\n\n       if(!response.data.user) {\n           $window.location = \"http://www.rhapsodyfestival.com/auth\"\n           defer.reject()\n       } else {\n         //console.log(response.data.user[2])\n        //  console.log(response.data.user)\n         $scope.display_name = response.data.user[1];\n         $scope.user_id = response.data.user[0]\n         let current_user = response.data.user[0]\n\n         if (response.data.user[2] === 1) {\n           // hide the admin button\n           //console.log(\"its 0\")\n           $scope.moderate = true\n         } else if (response.data.user[2] === 0) {\n           $scope.moderate = false\n           //console.log('its not 0')\n         }\n\n         $scope.updated_threads =[]\n         $scope.display_updates = function(current_user){\n\n           homeSrv.display_updates(current_user).then((resp) => {\n             $scope.thread_updates = resp\n             let loop_these = resp\n             let dupes_removed = []\n             for(var i = 0; i < loop_these.length; i++) {\n               if (dupes_removed.indexOf(loop_these[i]) == -1)\n                dupes_removed.push(loop_these[i])\n             }\n             dupes_removed.forEach(function(el){\n               homeSrv.findThread(el).then((resp)=>{\n                 $scope.updated_threads.push(resp.data[0])\n               })\n             })\n           })\n         }\n         $scope.display_updates(current_user)\n       }\n   })\n   // find the number of reported threads + reported comments\n   $scope.getReported = function(){\n     let needMod = []\n     adminService.getReportedComments().then((resp)=>{\n       resp.data.forEach((el)=>{\n         needMod.push(el)\n       })\n\n     })\n\n     adminService.getReportedThreads().then((resp)=>{\n       resp.data.forEach((el)=>{\n         needMod.push(el)\n       })\n       $scope.modNumber = (needMod.length)\n       if (needMod.length < 1){\n         $scope.moderate = false\n       }\n     })\n\n\n\n\n   }\n   $scope.getReported()\n\n\n\n\n\n\n    $scope.getThreads = function(){\n\n      homeSrv.openThreads().then(function(resp){\n        //console.log(resp)\n\n        resp.data.forEach(function(el){\n\n          el.timeAgo = (moment(el.created_at, \"YYYYMMDD, h:mm:ss\").fromNow())\n        })\n        $scope.threads = resp.data\n      })\n\n  }\n\n    $scope.getThreads()\n\n\n\n\n})\n","angular.module('app').controller('newPostCtrl', function(postService, $state, threadService, authService, $scope, $http, $window, $stateParams, homeSrv){\n\n\n  //create post on button click and push to database\n\n  $scope.postNewThread = function(){\n    // threadService.unReadThread()\n    var data = {\n      thread_author: $scope.display_name,\n      thread_title: $scope.postTitle,\n      thread_content: $scope.postText,\n    }\n    if (data.thread_title.length >= 5) {\n      threadService.postThread(data).then(function(resp){\n        // whatever you want to do after the posting goes here!\n        $scope.postTitle = \"\";\n        $scope.postText = \"\";\n        $state.go('forum')\n      })\n    } else {\n      alert(\"Post titles must contain at least 5 characters!\")\n    }\n\n\n\n}\n\n\n  //this gets the session and pulls the displayName from it\n  $http({\n     method: \"GET\",\n     url: '/auth/me'\n   }).then((response) => {\n\n         if(response.data.user === false) {\n             $window.location = \"http://www.rhapsodyfestival.com/auth\"\n             defer.reject()\n         } else {\n        //  console.log(response.data.user)\n          $scope.display_name = response.data.user[1]\n\n          //  console.log(response.data.user[0].username)\n\n\n         }\n     })\n\n\n\n\n\n})\n","angular.module('app').controller('thread', function($scope, $state, threadService, $http, $window, $stateParams, homeSrv){\n\n  // get the display_name from the session object\n  $http({\n     method: \"GET\",\n     url: '/auth/me'\n   }).then((response) => {\n\n         if(!response.data.user) {\n             $window.location = \"http://www.rhapsodyfestival.com/auth\"\n             defer.reject()\n         } else {\n           //console.log(response.data.user)\n           $scope.display_name = response.data.user[1];\n           $scope.user_id = response.data.user[0]\n\n\n         }\n     })\n\n  // remove thread from feed_top if user has it in that array\n  $scope.removeFromTop = function(user_id, thread_id) {\n    // console.log(user_id, thread_id)\n    threadService.removeFromTop(user_id, thread_id).then((resp)=>{\n        resp.forEach((el)=>{\n          if (el == thread_id) {\n            threadService.remove_top(user_id, thread_id)\n          }\n\n        })\n    })\n  }\n\n\n  // display all the top level comments for a thread\n    $scope.getcomments = function(){\n    //  console.log($scope.thread.thread_id)\n      let data = $scope.thread.thread_id\n\n      threadService.getTopLevelComments(data).then(function(resp){\n\n        $scope.comments = resp.data\n        //console.log(resp.data)\n\n\n      })\n\n  }\n\n\n  // //fetches the thread data from service and assigns it to thread\n  homeSrv.findThread($stateParams.thread_id).then(function(resp){\n    //console.log(resp)\n    $scope.thread = resp.data[0]\n\n    $scope.thread.timeAgo = (moment($scope.thread.created_at, \"YYYYMMDD, h:mm:ss\").fromNow())\n    $scope.getcomments()\n\n\n    $scope.isItStarred($scope.user_id, $scope.thread.thread_id)\n\n    $scope.removeFromTop($scope.user_id, $scope.thread.thread_id)\n  })\n  // console.log($stateParams.thread_id)\n\n\n\n\n\n// thread is starred or NOT star\n$scope.isItStarred = function(user_id, thread_id){\n   threadService.isItStarred(user_id, thread_id).then(function(resp){\n    $scope.starred = resp\n  })\n}\n\n// toggle star on\n$scope.starThis = function(user_id, thread_id){\n  // console.log(\"controller sending\" , user_id, thread_id)\n\n  threadService.starThis(user_id, thread_id).then(function(resp){\n    $scope.starred = resp\n  })\n}\n\n// toggle star off\n$scope.unStarThis = function(user_id, thread_id){\n  // console.log(\"controller sending\", user_id, thread_id)\n\n  threadService.unStarThis(user_id, thread_id).then(function(resp){\n    //console.log(resp)\n    $scope.starred = resp\n  })\n}\n\n\n\n\n\n\n\n\n\n\n// '/'/'/'/'/'/'/'/'/'/'/'/\n// submit a new top level comment to a thread\n  $scope.addComment = function(){\n    //console.log(\"fire\")\n    var data = {\n      thread_id: $scope.thread.thread_id,\n      parent_comment: 0,\n      author_display: $scope.display_name,\n      comment_content: $scope.comment_content,\n      author_id: $scope.user_id\n    }\n    if (data.comment_content.length >= 5) {\n      threadService.createComment(data).then(function(resp){\n        // after clicking the button, do this!\n        $scope.comment_content = \"\";\n        //$scope.comments.push(data)\n        $scope.getcomments()\n\n        // find every user that has this thread starred!\n        threadService.feed_top(data)\n\n        // add this thread to their feed_top array\n\n\n\n      })\n    } else {alert(\"comments must have at least 5 characters!\")}\n\n  }\n\n// report thread =====================================\n\n$scope.reportThread = function(thread_id){\n    threadService.reportThread(thread_id).then(function(resp){\n      alert(\"Thanks, an admin will review your report soon\")\n    })\n}\n\n// report a comment ===============================\n  $scope.reportComment = function(data){\n    threadService.reportcomment(data).then(function(resp){\n      alert(\"Thanks, an admin will review your report soon\");\n    })\n  }\n\n// hide a comment thread =========================================== HIDE\n\n  $scope.onHide = true\n  $scope.togglecomment = function($event, comment) {\n    if (angular.element($event.target).parent().parent().parent().hasClass('hide')){\n          angular.element($event.target).parent().parent().parent().removeClass('hide');\n          comment.hideShow = \"[–]\"\n          angular.element($event.target).removeClass('showBlue')\n    } else {\n          angular.element($event.target).parent().parent().parent().addClass('hide');\n          angular.element($event.target).val()\n          comment.hideShow = \"[+]\"\n          angular.element($event.target).addClass('showBlue')\n    }\n\n\n  }\n\n\n\n\n// post a reply comment\n//show the reply action area\n  $scope.replyComment = function(comment){\n        comment.showCommentReplyTextBox = true;\n  }\n\n// post the reply\n  $scope.addChildComment = function(comment){\n    let data = {\n      thread_id: $scope.thread.thread_id,\n      parent_comment: comment.comment_id,\n      author_display: $scope.display_name,\n      comment_content: comment.child_comment_content\n    }\n    if (data.comment_content.length >= 3){\n      threadService.createComment(data).then(function(resp){\n        // after clicking the button, do this!\n        comment.child_comment_content = \"\";\n        $scope.getcomments()\n      })\n\n    } else (alert(\"replies to comments need at least 3 characters!\"))\n\n\n  }\n\n//cancel the reply\n  $scope.replyCommentCancel = function(comment){\n    comment.showCommentReplyTextBox = false;\n  }\n\n\n// END OF MODULE ///////////////////////////////////////////////////////////////\n})\n","angular.module('app')\n.directive('comments', function ($compile) {\n  return {\n      restrict: \"E\",\n      // scope: {\n      //   comment: \"=\"\n      // },\n      templateUrl: \"../app/directives/threadTemplate.html\",\n      link: function (scope, element, attrs) {\n        //check if this member has children\n        if (scope.comment.children.length > 0) {\n            // append the collection directive to this element\n            $compile('<comments class=\"ng-scope id_{{comment.comment_id}}\" comment=\"comment\" ng-repeat=\"comment in comment.children | orderBy: &quot;-created_at&quot;\"\"></comments>')(scope, function(cloned, scope){\n              element.append(cloned);\n              });\n        }\n      }\n\n\n\n      // compile: function(element) {\n      //     // Use the compile function from the RecursionHelper,\n      //     // And return the linking function(s) which it returns\n      //     return recursionHelper.compile(element);\n      // }\n  };\n});\n\n\n\n\n\n\n\n\n\n// templateUrl: \"../app/directives/threadTemplate.html\"\n","angular.module('app').service('adminService', function($http){\n\n  this.getReportedComments = function(){\n    return $http ({\n      method: \"GET\",\n      url: \"/reportedcomments\"\n    }).then(function(resp){\n      return resp\n    })\n\n  }\n\n  this.getReportedThreads = function(){\n    return $http ({\n      method: \"GET\",\n      url: \"/reportedthreads\"\n\n\n    }).then(function(resp){\n      return resp\n    })\n  }\n// delete comment\n  this.deleteComment = function(comment_id){\n    //console.log(comment_id)\n    return $http ({\n      method: \"DELETE\",\n      url: \"/delete/comments/comment_id/\" + comment_id\n      //data must be an object!\n\n    }).then(function(resp){\n      //console.log(data)\n      return resp\n    })\n  }\n// delete thread\nthis.deleteThread = function(thread_id){\n\n  return $http ({\n    method: \"DELETE\",\n    url: \"/delete/threads/thread_id/\" + thread_id\n    //data must be an object!\n\n  }).then(function(resp){\n    //console.log(data)\n    return resp\n  })\n}\n// dismiss comment\n  this.dismissComment = function(comment_id){\n\n    return $http({\n      method: \"PUT\",\n      url: \"/dismisscomment/\" + comment_id,\n\n\n    }).then(function(resp){\n      return resp\n    })\n  }\n  // dismiss thread\n    this.dismissThread = function(thread_id){\n\n      return $http({\n        method: \"PUT\",\n        url: \"/dismissthread/\" + thread_id,\n\n\n      }).then(function(resp){\n        return resp\n      })\n    }\n})\n","angular.module('app').service('authService', function($http){\n\n  // returns the current user object from auth0\n  this.getCurrentUser = function () {\n    //console.log(\"test\")\n    return $http.get('/auth/me').then(function(response){\n      //console.log(response)\n      return response\n\n    })\n\n  }\n\n\n  this.test = function(){\n\n    return $http({\n      method: \"GET\",\n      url: \"/auth/me\"\n    }).then(function(res){\n      //console.log(res)\n    }).catch(function(error){\n      //console.log(error)\n    })\n\n  }\n\n})\n","angular.module('app').service('eventsService', function($http){\n\nthis.createEvent = (event) => {\n  // console.log(event)\n  return $http ({\n    url: '/create-event',\n    method: 'post',\n    data: event\n  })\n}\n\n// GET ALL EVENTS\nthis.getAllEvents = () => {\n  return $http ({\n    method: 'GET',\n    url: '/get-all-events'\n  }).then(resp => {\n    //console.log(resp)\n    return resp\n  })\n}\n// get one event for individual event page\nthis.getEvent = (id) => {\n  return $http ({\n    method: \"GET\",\n    url: \"/get-event/\" + id\n  }).then(resp => (resp))\n\n\n}\n\n\nthis.eventHappened = id => {\n  return $http ({\n    method: \"PUT\",\n    url: \"/event-happened/\" + id\n  })\n}\n\n\n\n})\n","angular.module('app').service('postService', function($http){\n\n  // returns the current user object from auth0\n  this.getCurrentUser = function () {\n    //console.log(\"test\")\n    return $http.get('/auth/me').then(function(response){\n      //console.log(response)\n      return response\n\n    })\n\n  }\n\n\n  this.test = function(){\n\n    return $http({\n      method: \"GET\",\n      url: \"/auth/me\"\n    }).then(function(res){\n      //console.log(res)\n    }).catch(function(error){\n      //console.log(error)\n    })\n\n  }\n\n})\n","angular.module('app').service('recursion', function($http){\n\n\n\n\n\n\n\n\n\n\n\n\n})\n","angular.module('app').factory('recursionHelper', ['$compile', function($compile){\n  // return {\n  //     childAction: function(){\n  //\n  //\n  //\n  //\n  //     }\n\n      // /**\n      //  * Manually compiles the element, fixing the recursion loop.\n      //  * @param element\n      //  * @param [link] A post-link function, or an object with function(s) registered via pre and post properties.\n      //  * @returns An object containing the linking functions.\n      //  */\n      return {compile: function(element, link){\n          // Normalize the link parameter\n          if(angular.isFunction(link)){\n              link = { post: link };\n          }\n\n          // Break the recursion loop by removing the contents\n          var contents = element.contents().remove();\n          var compiledContents;\n          return {\n              pre: (link && link.pre) ? link.pre : null,\n              /**\n               * Compiles and re-adds the contents\n               */\n              post: function(scope, element){\n                  // Compile the contents\n                  if(!compiledContents){\n                      compiledContents = $compile(contents);\n                  }\n                  // Re-add the compiled contents to the element\n                  compiledContents(scope, function(clone){\n                      element.append(clone);\n                  });\n\n                  // Call the post-linking function, if any\n                  if(link && link.post){\n                      link.post.apply(null, arguments);\n                  }\n              }\n          };\n      }\n  };\n}]);\n","angular.module('app').service('homeSrv', function($http){\n\n  this.openThreads = function(){\n    return $http({\n      url: '/threads',\n      method: 'GET',\n    }).then(function(resp){\n      return resp;\n    })\n  }\n\n  // see if current user has any thread updates\n  this.display_updates = function(current_user){\n    // console.log(current_user)\n    return $http({\n      url: '/get_feed_top/' + current_user,\n      method: 'GET',\n    }).then(function(resp){\n      // return (resp);\n      let feed_top = (resp.data[0].feed_top)\n      if (feed_top == null || feed_top.length < 1) {\n        return false\n      } else {\n\n        return feed_top\n      }\n    })\n\n  }\n\n\n  this.findThread = function(id){\n    return $http({\n      url: '/thread/' + id,\n      method: 'GET',\n    }).then(function(resp){\n      return resp;\n    })\n  }\n\n// moment JS to get the \"X hours ago\" for comments and threads\n\n  this.timeFrom = function(time) {\n    return(moment(time, \"YYYYMMDD, h:mm:ss\" ).startOf('seconds').fromNow())\n  }\n\n\n\n\n})\n","angular.module('app').service('threadService', function($http){\n\n\n\n// post http posts to database\nthis.postThread = function(data){\n  return $http({\n    method: \"POST\",\n    url: \"/newthread\",\n    data: data\n  })\n},\n\n// remove the thread from top feed\n// first get the users top feed data\nthis.removeFromTop = function(user_id, thread_id){\n  return $http({\n    method: \"get\",\n    url: \"/get_feed_top/\" + user_id,\n  }).then((resp)=>{\n    return (resp.data[0].feed_top)\n  })\n},\n// perform the removal\nthis.remove_top = function(user_id, thread_id){\n  return $http({\n    method: \"PUT\",\n    url: \"/remove_top/\" + user_id + \"/\" + thread_id\n\n  })\n},\n\n\n\n// mark new thread as unread for all users\nthis.unReadThread = function(data){\n  return $http({\n    method: \"get\",\n    url: \"/unreadthread\",\n    data: data\n  })\n},\n\n\n// get top level comments for a threadService\nthis.getTopLevelComments = function(data){\n  return $http({\n    method:\"GET\",\n    url:\"/getallcomments/\" + data\n\n  }).then(function(resp){\n    //console.log(resp)\n    return resp\n  })\n},\n\n/// is it starred?\n// check using the user id and the thread id passed from the controller\nthis.isItStarred = function(user_id, thread_id){\n  // console.log(\"we have the \", user_id, thread_id)\n  return $http({\n    method: \"GET\",\n    url: \"/isitstarred/\" + user_id + \"/\" + thread_id\n  }).then(function(resp){\n    // console.log(resp.data)\n    return (resp.data)\n  })\n\n},\n// toggle star on\nthis.starThis = function(user_id, thread_id){\n  //console.log(\"we got here\")\n  return $http({\n    method: \"put\",\n    url: \"/starthis/\" + user_id + \"/\" + thread_id\n  }).then(function(resp){\n    return resp.data\n\n  })\n\n},\n//toggle star off\nthis.unStarThis = function(user_id, thread_id){\n  return $http({\n    method: \"put\",\n    url: \"/unstarthis/\" + user_id + \"/\" + thread_id\n  }).then(function(resp){\n    // console.log(resp.data)\n    return resp.data\n  })\n\n\n\n}\n\n\n// post comment\nthis.createComment = function(data){\n  return $http({\n    method: \"POST\",\n    url: \"/newcomment\",\n    data: data\n  })\n},\n\nthis.feed_top = function(data) {\n  let thread_author = data.author_id\n  console.log(data.thread_id)\n  let thread_id = data.thread_id\n  return $http({\n    method: \"PUT\",\n    url: \"/feed_top/\" + data.thread_id\n  }).then(function(resp){\n\n\n    let mod = (resp.data)\n    mod.forEach(function(el){\n      //console.log(el)\n      if (el.id !== thread_author){\n        return $http({\n          method:\"PUT\",\n          url:\"/add_feed_top/\" + thread_id + \"/\" + el.id\n        })\n\n      }\n\n\n\n    })\n\n  })\n},\n\n// report a comment\nthis.reportcomment = function(data){\n  // console.log(data)\n  return $http({\n    method: \"PUT\",\n    url: \"/reportcomment/\" + data\n  })\n},\n\nthis.reportThread = function(data){\n  return $http({\n    method: \"PUT\",\n    url: \"/reportthread/\" + data\n  })\n}\n\n})\n","angular.module('app').controller('principles', function(adminService, $state, threadService, authService, $scope, $http, $window, $stateParams, principlesService){\n\n  $scope.principles = principlesService.principles\n\n  $scope.random = function() {\n    return 0.5 - Math.random();\n}\n\n})\n","angular.module('app').service('principlesService', function($http){\n\n\n\n\nthis.principles = [\n  {\n    title: \"Radical Self Reliance\",\n    text: \"This event encourages you to discover and rely upon yourself. There's no food trucks or trash cans at the event!\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Radical Inclusion\",\n    text: \"Anyone may be apart of Rhapsody. There are no prerequisites for participation - we welcome the stranger.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Gifting\",\n    text: \"We devote ourselves to act of giving. Gifts are unconditional. Gifts do not exchange or contemplate returns!\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Decommodification\",\n    text: \"We discourage mediation of our environment by sponsorship, transactions, or advertising. Resist subsituting consumption for participation.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Radical Self Expression\",\n    text: \"This arises from the individual. Your expression is offered as a gift to others - respecting the rights/liberties of the recipient.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Communal Effort\",\n    text: \"We value collaboration! Everyone strives to create public and shared works of expression and communication.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Civic Responsibility\",\n    text: \"We value civility. Assume responsibility for anyone participating in something you've organized and act in accordance with the law.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Leave No Trace\",\n    text: \"Respect the environment. Clean up after yourselves and whenever possible, leave places in a better state than you found it in.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Radical Participation\",\n    text: \"Transformative change only comes through sincere personal participation. We believe in achieving through doing. Everone is invited to work and play.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  },\n  {\n    title: \"Immediacy\",\n    text: \"There's no moment like the present. Overcome the barriers that stand between you, me, and our good times together! Recognize your inner self by acting purely in the moment.\"\n  //  image: \"../app/images/principles/sel-reliance.jpg\"\n  }\n]\n\n\n\n\n\n\n\n\n\n\n\n})\n"]}